- name: Pacman config setup
  when: system.pacman == true
  ansible.builtin.copy:
    src: pacman.conf
    dest: /etc/
- name: Adding pacoloco config file for hugin
  when: system.pacoloco == true
  ansible.builtin.copy:
    src: pacoloco-huginn
    dest: /etc/pacman.d/pacoloco
- name: Adding empty pacoloco config file
  when: system.pacoloco == false
  ansible.builtin.copy:
    src: pacoloco-empty
    dest: /etc/pacman.d/pacoloco
- name: Update pacman package cache
  pacman:
    update_cache: true
  register: task_result
  until: task_result is success
  retries: 10
  delay: 2
- name: Perform full system upgrade
  pacman:
    update_cache: true
    upgrade: true
  register: task_result
  until: task_result is success
  retries: 10
  delay: 2
  notify:
    - rkhunter propupdate
- name: Install base packages
  pacman:
    name: "{{ base_packages }}"
    state: present
  register: task_result
  until: task_result is success
  retries: 10
  delay: 2
  notify:
    - rkhunter propupdate
- name: Install yay as aur helper
  kewlfft.aur.aur:
    name:
      - yay
  become: true
  become_user: "{{ user.name }}"
  register: task_result
  until: task_result is success
  retries: 10
  delay: 2
- name: Install sbctl for easy secure boot management
  pacman:
    name:
      - sbctl
    state: present
  register: task_result
  until: task_result is success
  retries: 10
  delay: 2
- name: Install microcode updates for intel (if necessary)
  pacman:
    name: intel-ucode
    state: present
  register: task_result
  until: task_result is success
  retries: 10
  delay: 2
  notify:
    - update grub
    - regenerate initramfs
  when: (system.processor == "intel") and (system_distribution == "arch")
- name: Install microcode updates for amd (if necessary)
  pacman:
    name: amd-ucode
    state: present
  register: task_result
  until: task_result is success
  retries: 10
  delay: 2
  notify:
    - update grub
    - regenerate initramfs
  when: (system.processor == "amd") and (system_distribution == "arch")
- name: Enable cronie server
  ansible.builtin.service: name=cronie state=started enabled=true
- name: Enable ssh server
  ansible.builtin.service: name=sshd state=started enabled=true
  when: ssh.enable_sshd == true
- name: Install misc packages
  pacman:
    name: "{{ misc_packages }}"
    state: present
  register: task_result
  until: task_result is success
  retries: 10
  delay: 2
  notify:
    - rkhunter propupdate
- name: Install misc AUR packages
  kewlfft.aur.aur:
    name: "{{ item }}"
  with_items:
    - "{{ aur_packages }}"
  become: true
  become_user: "{{ user.name }}"
  register: task_result
  until: task_result is success
  retries: 10
  delay: 2
  notify:
    - rkhunter propupdate
- name: Configure sysctl
  ansible.builtin.copy: src=99-performance.conf dest=/etc/sysctl.d/
  when: (use_bpftune == true) and (system_distribution == "arch")
- name: Deploy disabled sysctl configuration file
  ansible.builtin.copy: src=99-performance.conf dest=/etc/sysctl.d/99-performance.conf.disabled
  when: (use_bpftune == false) and (system_distribution == "arch")
- name: Configure udisk2 mount options
  ansible.builtin.copy: src=mount_options.conf dest=/etc/udisks2/mount_options.conf
  when: system_distribution == "arch"
- name: Configure udisk2 rules
  ansible.builtin.copy: src=99-udisks2.rules dest=/etc/polkit-1/rules.d/
  when: system_distribution == "arch"
- name: Start pkgfile-update.timer
  ansible.builtin.systemd_service:
    name: pkgfile-update.timer
    enabled: true
    masked: no
- name: Create /etc/cmdline.d directory
  ansible.builtin.file:
    path: /etc/cmdline.d
    state: directory
    mode: "0755"
  register: created_pacman_hooks_dir
- name: Deploy fwupd sbctl signing hook
  ansible.builtin.copy:
    src: sign-fwupd-secureboot.hook
    dest: /etc/pacman.d/hooks/
  when: created_pacman_hooks_dir
- name: Install pacman-contrib
  pacman:
    name:
      - pacman-contrib
    state: present
  register: task_result
  until: task_result is success
  retries: 10
  delay: 2
- name: Enable and start paccache to clean pacman caches
  ansible.builtin.service:
    name: paccache.timer
    enabled: true
    state: started
